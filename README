Least Squares Policy Iteration in Python

Author: Jeremy Stober
Contact: stober@gmail.com
Version: 0.01

This is a Python implementation of LSPI from Lagoudakis and Parr in
JMLR (2003). The code depends on having an environment that provides a
function phi for generating features from state-action pairs, and a
function linear_policy for evaluating the policy. The gridworld
package (https://github.com/stober/gridworld) provides example
environments. Both lspi.py and lstdq.py contain example code using a
simple chainworld environment from the original paper (included in the
gridworld package).

Current Development Notes:

+ Need to get sparse version working with lsqr solver.
+ For the case where the null space of the model matrix is nontrivial multiple weight vectors are optimal. The dense inversion method converges but the solver may not (it may cycle through optimal solutions).
+ Need to change the criterion to stop training to one that depends on values - not feature weights.
+ Need to figure out if the Opt version is correct and worth keeping.